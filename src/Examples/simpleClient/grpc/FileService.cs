// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/file_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Services {

  /// <summary>Holder for reflection information generated from services/file_service.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class FileServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for services/file_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FileServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtzZXJ2aWNlcy9maWxlX3NlcnZpY2UucHJvdG8SCFNlcnZpY2VzGhtnb29n",
            "bGUvcHJvdG9idWYvZW1wdHkucHJvdG8iGQoLRmlsZU1lc3NhZ2USCgoCaWQY",
            "ASABKAkiGQoJRmlsZUJ5dGVzEgwKBGRhdGEYASABKAwiHgoMRXhpc3RNZXNz",
            "YWdlEg4KBnJlc3VsdBgBIAEoCDLwAQoLRmlsZVNlcnZpY2USMwoDR2V0EhUu",
            "U2VydmljZXMuRmlsZU1lc3NhZ2UaEy5TZXJ2aWNlcy5GaWxlQnl0ZXMiABI2",
            "CgZDcmVhdGUSEy5TZXJ2aWNlcy5GaWxlQnl0ZXMaFS5TZXJ2aWNlcy5GaWxl",
            "TWVzc2FnZSIAEjkKBkRlbGV0ZRIVLlNlcnZpY2VzLkZpbGVNZXNzYWdlGhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5IgASOQoGRXhpc3RzEhUuU2VydmljZXMu",
            "RmlsZU1lc3NhZ2UaFi5TZXJ2aWNlcy5FeGlzdE1lc3NhZ2UiAEJPCgdleC5n",
            "cnBjWj5naXRodWIuY29tL0VuZWJyYS9TZXJ2aWNlQ29vcmRpbmF0b3IvZ3Jw",
            "Yy9zZXJ2aWNlcy9maWxlc2VydmljZaICA1JUR2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Services.FileMessage), global::Services.FileMessage.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Services.FileBytes), global::Services.FileBytes.Parser, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Services.ExistMessage), global::Services.ExistMessage.Parser, new[]{ "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FileMessage : pb::IMessage<FileMessage> {
    private static readonly pb::MessageParser<FileMessage> _parser = new pb::MessageParser<FileMessage>(() => new FileMessage());
    public static pb::MessageParser<FileMessage> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Services.FileServiceReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public FileMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    public FileMessage(FileMessage other) : this() {
      id_ = other.id_;
    }

    public FileMessage Clone() {
      return new FileMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as FileMessage);
    }

    public bool Equals(FileMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      return size;
    }

    public void MergeFrom(FileMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FileBytes : pb::IMessage<FileBytes> {
    private static readonly pb::MessageParser<FileBytes> _parser = new pb::MessageParser<FileBytes>(() => new FileBytes());
    public static pb::MessageParser<FileBytes> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Services.FileServiceReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public FileBytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    public FileBytes(FileBytes other) : this() {
      data_ = other.data_;
    }

    public FileBytes Clone() {
      return new FileBytes(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as FileBytes);
    }

    public bool Equals(FileBytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      return size;
    }

    public void MergeFrom(FileBytes other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ExistMessage : pb::IMessage<ExistMessage> {
    private static readonly pb::MessageParser<ExistMessage> _parser = new pb::MessageParser<ExistMessage>(() => new ExistMessage());
    public static pb::MessageParser<ExistMessage> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Services.FileServiceReflection.Descriptor.MessageTypes[2]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ExistMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ExistMessage(ExistMessage other) : this() {
      result_ = other.result_;
    }

    public ExistMessage Clone() {
      return new ExistMessage(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as ExistMessage);
    }

    public bool Equals(ExistMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      return size;
    }

    public void MergeFrom(ExistMessage other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
